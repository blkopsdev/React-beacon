/* This has the CSS for the shell and common screens */

@import 'variables.less';
@import url('https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700');
body {
  margin: 0;
  padding: 0;
  font-family: 'Roboto Condensed', sans-serif;
  font-weight: 300;
  background-color: #eee;
  line-height: 29px;
  letter-spacing: 2px;
  font-size: 12px;
}

.btn {
  // border: none;
  // padding: 10px 15px;
  // border-radius: 4px;
  // font-size: 16px;
  // font-weight: 400;
  text-transform: capitalize;
  padding: 6px 18px;
  border-radius: 8px;
  // font-family: @headerFont;
  i {
    // margin-right: 5px;
  }
  &.btn-lg {
    font-size: 20px;
    padding: 12px 20px;
  }
  &.btn-sm {
    padding: 5px 18px;
    font-size: 14px;
  }
  &.btn-primary { // Blue button
    // color: #fff;
    background: @primaryBlue;
    border-color: @textBlue;
    // border-bottom: 3px solid @grayBlueShadow;
  }
  &.btn-warning {
    background: @orange;
    border-color: @darkOrange;
    // border-bottom: 3px solid @yellowShadow;
  }
  &.btn-default {
    // color: white;
    // background-color: #aaa;
    // border-bottom: 3px solid #777;
  }
  &.btn-danger {
    // background-color: @red;
    border-bottom: 3px solid #840000;
  }
  &.btn-success {
    background: @green;
    border-color: @darkGreen;
  }
  &.btn-info {
    background: @purple;
    border-color: @darkPurple;
  }
  &.btn-link {
    color: @primaryBlue;
    text-transform: uppercase;
    &.left-side {
      padding-left: 0;
    }
    &.right-side {
      padding-right: 0;
    }
  }
  &:focus {
    outline: none !important;
  }
}

.slide-modal form{
  margin-bottom: 20px;
}

.beacon-form {
  display: block;
  .form-buttons {
    margin-top: 20px;
  }
  .datetime-select .form-control-feedback{
    right: 10px;
  }
  .react-toggle-label{
    margin-left: 10px;
    vertical-align: top;
    line-height: 30px;

  }
  &.warning{
    .react-select__multi-value{
      background-color: fade(@orange, 30%);
    }
    .react-toggle--checked{
      .react-toggle-track{
        background-color: fade(@orange, 30%);
      }
      &:hover .react-toggle-track{
        background-color: fade(@darkOrange, 30%);
      }
    }
  }
  &.success{
    .react-select__multi-value{
      background-color: fade(@green, 30%);
    }
    .react-toggle--checked{
      .react-toggle-track{
        background-color: fade(@green, 30%);
      }
      &:hover .react-toggle-track{
        background-color: fade(@darkGreen, 30%);
      }
    }
  }
  &.info{
    .react-select__multi-value{
      background-color: fade(@purple, 30%);
    }
    .react-toggle--checked{
      .react-toggle-track{
        background-color: fade(@purple, 30%);
      }
      &:hover .react-toggle-track{
        background-color: fade(@darkPurple, 30%);
      }
    }
  }
  &.primary{
    .react-select__multi-value{
      background-color: fade(@primaryBlue, 30%);
    }
    .react-toggle--checked{
      .react-toggle-track{
        background-color: fade(@primaryBlue, 30%);
      }
      &:hover .react-toggle-track{
        background-color: fade(@darkBlue, 30%);
      }
    }
  }
  .required-label{
    text-transform: capitalize;
    color: @darkGrey;
  }
}

.form-group {
  margin-bottom: 10px;
  .control-label {
    font-weight: normal;
    margin-bottom: 0px;
    text-transform: uppercase;
    line-height: 20px;
  }
  .form-control {
    margin-top: -5px;
    font-size: 1.4rem;
    font-weight: 400;
    font-family: 'Open Sans';
    color: #777;
    box-shadow: none;
    border-radius: 8px;
    height: 33px;

  }
  .input-group-btn {
    .btn {
      margin-top: -5px;
      padding: 6px 18px 5px 18px;
    }
  }
  .react-select__multi-value{
    padding: 2px;
  }
  .react-select__control{

    height: 33px;
    min-height: 33px;
    //  overrides for react-select 
    // TODO need to apply hover border color for success and error, need selected border to match bootstrap
    letter-spacing: normal;
    &:hover {
      border-color: none;
    }
    .react-select__value-container {
      padding: 0;
    }
    
  }
  .is-multi .react-select__control{
    min-height: 40px;
    height: auto;
  }
  .react-select__option{
    color: black;
  }

}


// color transparent here so that bootstrap can override it when it adds a validation color
// if we put back in the fontawesome icon
// .form-control-feedback{
//   color: transparent;
//   padding: 5px;
// }
//fade(#F5F5F5, 90%)
.slide-modal{
  .modal-footer {
    display: none;
  }
}

// enable if we want the second modal backdrop to be above the first modal, 
//also need to update the containers for the modals to "second-modal" and "first-modal"
// #modal-two .modal-backdrop{
//   z-index: 1050;
// }

.two-pane-layout .slide-modal {
  overflow: hidden;
  .modal-body {
    padding: 15px 0 40px 0;
    overflow-y: auto;
    height: calc(100vh - @headerHeight - 60px);
    .form-buttons{
      position: fixed;
      bottom: 0;
      padding-bottom: 10px;
      padding-top: 10px;
      background-color: #F5F5F5;
      border-top: 1px solid darken(#F5F5F5, 10%)

    }
  }
  .modal-footer {
    display: none;
  }
  .modal-dialog {
    transform: translateY(0%) !important;
    width: 400px;
    margin: 0px auto 0 320px;
  }
  .modal-content {
    background-color: #F5F5F5;
    transition: transform .5s;
    border-radius: 0px;
    box-shadow: none;
    min-height: calc(~"100vh - " @headerHeight);
    border: none;
    border-left: 2px #4E5254 solid;

  }
  &.from-left .modal-content {
    margin-right: auto;
    transform: translateX(-100%);
  }
  &.after-open .modal-content {
    transform: translateX(0%);
  }
  &.second-modal {
    margin: 0px auto 0 399px;
    z-index:1045;
    &.after-entered {
      z-index: 1055;
    }
  }
}

.modal-container {
  position: relative;
}

.modal-container .modal, .modal-container .modal-backdrop {
  position: absolute;
}

.container-fluid {
  height: calc(~"100vh - " @headerHeight);
}

.banner {
  height: 60px;
  width: 100%;
  img {
    opacity: .3;
    width: 100%;
    height: 100%;
    min-width: 1120px;
  }
  .title {
    font-size: 24px;
    color: #FFFFFF;
    position: absolute;
    left: 20px;
    top: 17px;
    text-transform: uppercase;
    .breadcrumb {
      background-color: transparent;
      padding: 0px 0px;
      span, a {
        color: white;
      }
    }
  }
}
.beacon-toggle{
  &.react-toggle--focus .react-toggle-thumb{
    box-shadow: none;
  }
  .react-toggle-thumb{
    border-color: @primaryBlue;
  }
}

.ReactTable.beacon-table {
  font-size: 1.4rem;
  font-weight: 400;
  border-top: none;
  max-height: calc(100vh - @maxTableHeightDifference);
  min-height: 130px;
  overflow: auto;

  // margin-bottom: 90px; // space for the "no rows found" message
  .rt-noData{
    transform: translate(-50%, -90%);
    padding: 5px 10px;
  }
  &.dark .rt-tr.-odd {
    background-color: fade(@dark, 5%);
    &:hover {
      background-color: fade(@dark, 20%);
    }
  }
  &.green .rt-tr.-odd {
    background-color: fade(@green, 5%);
    &:hover {
      background-color: fade(@green, 20%);
    }
  }
  &.blue .rt-tr.-odd {
    background-color: fade(@blue, 5%);
    &:hover {
      background-color: fade(@blue, 20%);
    }
  }
  &.orange .rt-tr.-odd {
    background-color: fade(@orange, 5%);
    &:hover {
      background-color: fade(@orange, 20%);
    }
  }
  &.purple .rt-tr.-odd {
    background-color: fade(@purple, 5%);
    &:hover {
      background-color: fade(@purple, 20%);
    }
  }
  &.purple .rt-tr.-even:hover {
    background-color: fade(@purple, 20%);
  }
  &.dark .rt-tr.-even:hover {
    background-color: fade(@dark, 20%);
  }
  &.green .rt-tr.-even:hover {
    background-color: fade(@green, 20%);
  }
  &.blue .rt-tr.-even:hover {
    background-color: fade(@blue, 20%);
  }
  &.orange .rt-tr.-even:hover {
    background-color: fade(@orange, 20%);
  }
  &.purple .rt-tr.-even:hover {
    background-color: fade(@purple, 05%);
  }
  .rt-td {
    padding: 5px 5px 0 5px;
    min-height: 38px;
    white-space: normal;
  }
  .rt-tr {
    background-color: white;
    cursor: pointer;
    &:first-child {
      padding-left: 20px;
    }
  }
  .rt-thead .rt-tr {
    text-align: left;
    font-weight: 600;
    text-transform: uppercase;
    background-color: transparent;
    cursor: default;
  }
  .rt-thead .rt-th {
    border-right: none;
  }
  .rt-tbody .rt-tr-group {
    border-bottom: solid 3px rgba(0, 0, 0, 0.05);
    background-color: white;
  }
  .rt-thead.-header {
    box-shadow: none;
  }
  .-pagination {
    box-shadow: none;
  }
}

.double-bounce1, .double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #333;
  opacity: 0.6;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-animation: sk-bounce 2.0s infinite ease-in-out;
  animation: sk-bounce 2.0s infinite ease-in-out;
}

.double-bounce2 {
  -webkit-animation-delay: -1.0s;
  animation-delay: -1.0s;
}

@-webkit-keyframes sk-bounce {
  0%, 100% {
    -webkit-transform: scale(0.0)
  }
  50% {
    -webkit-transform: scale(1.0)
  }
}

@keyframes sk-bounce {
  0%, 100% {
    transform: scale(0.0);
    -webkit-transform: scale(0.0);
  }
  50% {
    transform: scale(1.0);
    -webkit-transform: scale(1.0);
  }
}

.security-functions-list{
  .list-group-item-heading{
    color: @blue;
  }
}

.form-control-feedback{
  z-index: 0;
}